---
- name: Set hostname
  hostname:
    name: "cam-{{ raspicam_name }}"

- name: Install necessary packages
  apt:
    update_cache: yes
    cache_valid_time: 86400
    name: "{{ item }}"
    state: latest
  with_items:
    - git
    - imagemagick
    - automake
    - libtool
    - libjpeg62-turbo-dev
    - libexif-dev

- name: Clone epeg from github
  git: 
    repo: "{{ item }}"
    dest: "{{ ansible_env.HOME}}/{{ item | regex_replace('^.*/', '') | regex_replace('\\.git$', '') }}"
    force: yes
  with_items:
    - https://github.com/mattes/epeg.git

- name: Clone raspi-tools from github
  git:
    repo: "{{ item }}"
    dest: "{{ ansible_env.HOME}}/{{ item | regex_replace('^.*/', '') | regex_replace('\\.git$', '') }}"
    version: "cam-{{ raspicam_name }}"
    force: yes
  with_items:
    - https://github.com/ljozsa/raspi-tools.git

- name: Build epeg
  command: "{{ item }} chdir={{ ansible_env.HOME}}/epeg"
  with_items:
    - ./autogen.sh
    - make
    - make install
    - ldconfig

- name: Install necessary python modules via pip
  command: pip install {{ item }}
  with_items:
    - requests
    - pytz

- name: copy camera unit file template to a proper location
  template:
    src: camera.service.tmpl
    dest: /etc/systemd/system/camera.service

- name: ensure that camera is enabled by hardware
  lineinfile:
    dest: /boot/config.txt
    regexp: ^{{ item }}
    line: "{{ item }}"
  with_items:
    - start_x=1
    - gpu_mem=128

- name: set timezone
  command: timedatectl set-timezone Europe/Prague

- name: reload systemd config, enable and start camera service
  command: systemctl {{ item }}
  with_items:
    - daemon-reload
    - enable camera
    - restart camera
